<!-- Generated with EZOut 2.0.6: Install-Module EZOut or https://github.com/StartAutomating/EZOut -->
<Types>
  <Type>
    <Name>EZOut.Invisible</Name>
    <Members>
      <ScriptMethod>
        <Name>EZOut.Invisible.format</Name>
        <Script>
                        Write-FormatView -TypeName EZOut.Invisible -Action {
    $null
}
    
                    </Script>
      </ScriptMethod>
    </Members>
  </Type>
  <Type>
    <Name>Hello.EZOut</Name>
    <Members>
      <ScriptMethod>
        <Name>Hello.EZOut.format</Name>
        <Script>
                        # If there is a .PSTypeName.txt file in the same directory, $PSTypeName will be set

if (-not $PSTypeName) {  
    $PSTypeName = "Hello.EZOut", "Hi.EZOut"
}

Write-FormatView -TypeName $PSTypeName -Action {
    if ($_.Message) {
        $_.Message
    } else {
        "Hello World"
    }
}

Write-FormatView -TypeName $PSTypeName -Property Message

Write-FormatView -TypeName $PSTypeName -Property Message -AsList
                    </Script>
      </ScriptMethod>
      <ScriptMethod>
        <Name>SayHello</Name>
        <Script>
                        ($this | Format-Custom | Out-String).Trim()
                    </Script>
      </ScriptMethod>
      <ScriptProperty>
        <Name>Message</Name>
        <GetScriptBlock>
                        if (-not $this.'.Message') {
    Add-Member -InputObject $this NoteProperty '.Message' 'Hello World' -Force
}
$this.'.Message'

                    </GetScriptBlock>
        <SetScriptBlock>
                        $this | Add-Member NoteProperty '.Message' "$args" -Force


                    </SetScriptBlock>
      </ScriptProperty>
    </Members>
  </Type>
  <Type>
    <Name>Hi.EZOut</Name>
    <Members>
      <ScriptMethod>
        <Name>Hello.EZOut.format</Name>
        <Script>
                        # If there is a .PSTypeName.txt file in the same directory, $PSTypeName will be set

if (-not $PSTypeName) {  
    $PSTypeName = "Hello.EZOut", "Hi.EZOut"
}

Write-FormatView -TypeName $PSTypeName -Action {
    if ($_.Message) {
        $_.Message
    } else {
        "Hello World"
    }
}

Write-FormatView -TypeName $PSTypeName -Property Message

Write-FormatView -TypeName $PSTypeName -Property Message -AsList
                    </Script>
      </ScriptMethod>
      <ScriptMethod>
        <Name>SayHello</Name>
        <Script>
                        ($this | Format-Custom | Out-String).Trim()
                    </Script>
      </ScriptMethod>
      <ScriptProperty>
        <Name>Message</Name>
        <GetScriptBlock>
                        if (-not $this.'.Message') {
    Add-Member -InputObject $this NoteProperty '.Message' 'Hello World' -Force
}
$this.'.Message'

                    </GetScriptBlock>
        <SetScriptBlock>
                        $this | Add-Member NoteProperty '.Message' "$args" -Force


                    </SetScriptBlock>
      </ScriptProperty>
    </Members>
  </Type>
</Types>